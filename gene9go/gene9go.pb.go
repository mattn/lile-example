// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gene9go.proto

/*
Package gene9go is a generated protocol buffer package.

It is generated from these files:
	gene9go.proto

It has these top-level messages:
	Request
	Response
*/
package gene9go

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Request struct {
	Word string `protobuf:"bytes,1,opt,name=Word" json:"Word,omitempty"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Request) GetWord() string {
	if m != nil {
		return m.Word
	}
	return ""
}

type Response struct {
	Text string `protobuf:"bytes,1,opt,name=Text" json:"Text,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Response) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func init() {
	proto.RegisterType((*Request)(nil), "gene9go.Request")
	proto.RegisterType((*Response)(nil), "gene9go.Response")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Gene9go service

type Gene9goClient interface {
	Translate(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
}

type gene9goClient struct {
	cc *grpc.ClientConn
}

func NewGene9goClient(cc *grpc.ClientConn) Gene9goClient {
	return &gene9goClient{cc}
}

func (c *gene9goClient) Translate(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := grpc.Invoke(ctx, "/gene9go.Gene9go/Translate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Gene9go service

type Gene9goServer interface {
	Translate(context.Context, *Request) (*Response, error)
}

func RegisterGene9goServer(s *grpc.Server, srv Gene9goServer) {
	s.RegisterService(&_Gene9go_serviceDesc, srv)
}

func _Gene9go_Translate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Gene9goServer).Translate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gene9go.Gene9go/Translate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Gene9goServer).Translate(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _Gene9go_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gene9go.Gene9go",
	HandlerType: (*Gene9goServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Translate",
			Handler:    _Gene9go_Translate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "gene9go.proto",
}

func init() { proto.RegisterFile("gene9go.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 169 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4d, 0x4f, 0xcd, 0x4b,
	0xb5, 0x4c, 0xcf, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x87, 0x72, 0x95, 0x64, 0xb9,
	0xd8, 0x83, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84, 0x84, 0xb8, 0x58, 0xc2, 0xf3, 0x8b, 0x52,
	0x24, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0xc0, 0x6c, 0x25, 0x39, 0x2e, 0x8e, 0xa0, 0xd4, 0xe2,
	0x82, 0xfc, 0xbc, 0xe2, 0x54, 0x90, 0x7c, 0x48, 0x6a, 0x45, 0x09, 0x4c, 0x1e, 0xc4, 0x36, 0xb2,
	0xe5, 0x62, 0x77, 0x87, 0x98, 0x24, 0x64, 0xc4, 0xc5, 0x19, 0x52, 0x94, 0x98, 0x57, 0x9c, 0x93,
	0x58, 0x92, 0x2a, 0x24, 0xa0, 0x07, 0xb3, 0x0f, 0x6a, 0xba, 0x94, 0x20, 0x92, 0x08, 0xc4, 0x40,
	0x25, 0x06, 0x27, 0xf5, 0x28, 0xd5, 0xf4, 0xcc, 0x92, 0x8c, 0xd2, 0x24, 0xbd, 0xe4, 0xfc, 0x5c,
	0xfd, 0xdc, 0xc4, 0x92, 0x92, 0x3c, 0xfd, 0x9c, 0xcc, 0x9c, 0x54, 0xdd, 0xd4, 0x8a, 0xc4, 0xdc,
	0x82, 0x9c, 0x54, 0x7d, 0xa8, 0x9e, 0x24, 0x36, 0xb0, 0xb3, 0x8d, 0x01, 0x01, 0x00, 0x00, 0xff,
	0xff, 0x71, 0xa8, 0xb2, 0xb6, 0xc7, 0x00, 0x00, 0x00,
}
